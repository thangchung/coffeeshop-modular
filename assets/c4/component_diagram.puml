@startuml coffeeshop_components

' left to right direction
' skinparam packageStyle rect

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
' uncomment the following line and comment the first to use locally
' !include C4_Component.puml

LAYOUT_TOP_DOWN()
SHOW_PERSON_OUTLINE()
' LAYOUT_AS_SKETCH()
' LAYOUT_WITH_LEGEND()

AddRelTag("async", $textColor=$ARROW_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())

title Components Diagram for Coffee Shop

Person(normal_user, "Normal User", "A user buys coffee and foods")

Container(coffeeshop_app, "The coffee shop application", "This application serves the coffee, drinks and foods and uses by counter, barista and kitchen modules.")
ContainerDb(postgres_db, "Postgres Db", "The database to store the coffee shop data in multiple schemas and tables.")

Container_Boundary(coffeeshop_app, "Coffee Shop Application") {
    Component(app_router, ".NET Route Handler", "/v1/api/orders", "this is an entry point into the application")
    
    Component(sender, "MediatR - Sender", "", "")
    Component(publisher, "MediatR - Publisher", "", "")
     
    Component(OrderInUseCase, "OrderInUseCase", "PlaceOrderCommand request handler", "")

    Component(Order, "Order", "Root Aggregate", "")
    Component(LineItem, "LineItem", "Entity", "")
    Component(OrderRepository, "OrderRepository", "Order has repository", "")

    Component(OrderUpdateUseCase, "OrderUpdateUseCase", "Usecase for processing notification using SignalR", "")
    Component(BaristaOrderInUseCase, "BaristaOrderInUseCase", "Usecase for processing drinks and coffee by barista", "")
    Component(KitchenOrderInUseCase, "KitchenOrderInUseCase", "Usecase for processing foods by kitchen", "")

    Rel(app_router, sender, "Send PlaceOrderCommand", "DTO object")
    Rel_U(OrderInUseCase, sender, "Subscribe PlaceOrderCommand", "DTO object", $tags = "async")
    Rel(OrderInUseCase, Order, "1. Instance new order object", "call to From method")
    Rel(OrderInUseCase, OrderRepository, "2. Use order repository", "")
    Rel_R(OrderInUseCase, publisher, "3. Replay domain events in Order and Publish to", "BaristaOrderIn, KitchenOrderIn, and OrderUpdate events")
    Rel(OrderRepository, Order, "Load DbSet<Order>", "")

    Rel(Order, LineItem, "has many", "")

    Rel(normal_user, app_router, "Uses", "REST/JSON")

    Rel(OrderRepository, postgres_db, "Add new order into database", "TCP")

    Rel(publisher, OrderUpdateUseCase, "Subscribe OrderUpdate", "", $tags = "async")
    Rel(publisher, BaristaOrderInUseCase, "Subscribe BaristaOrderIn", "", $tags = "async")
    Rel(publisher, KitchenOrderInUseCase, "Subscribe KitchenOrderIn", "", $tags = "async")

    Lay_D(LineItem, postgres_db)
}



@enduml